{
  "global": {
    "tips": {
      "good_bye": "Ok! Good bye.",
      "success": "Success",
      "error:": "Error",
      "fail": "Fail",
      "past": "Now you can press {{{key}}} to paste the path.",
      "copy_fail": "Can not copy the path to you system clipboard."
    },
    "options": {
      "unixify": {
        "desc": "Output the path as unix style, useful in Windows Git bash."
      },
      "force": {
        "desc": "Forced mode, skip the question."
      },
      "nolog": {
        "desc": "Don't not display any log."
      },
      "ignore_rc": {
        "desc": "Ignore .gpmrc. don't run any hook you don't trust."
      }
    }
  },
  "commands": {
    "add": {
      "desc": "Add a repository to gpm.",
      "argv": {
        "repo": {
          "desc": "git url address."
        }
      },
      "options": {
        "plugin": {
          "desc": "run the plugin after add repository."
        },
        "name": {
          "desc": "custom repository directory name."
        }
      },
      "log": {
        "invalid_url": "Invalid Repository Url: {{{repo}}}, please Make sure it is right.",
        "info_add_success": "Repository has been add to {{{path}}}",
        "info_copy_clipboard": "Now you can press {{{key}}} to paste the path",
        "warn_copy_clipboard": "Can not copy the path to you system clipboard",
        "confirm_cover": "Are you sure to cover {{{path}}}",
        "make_sure_install": "Can not Found {{{bin}}} environment variable in system, please make sure you has install it.",
        "info_run_plugin": "Running plugin: {{{name}}}",
        "err_run_plugin": "ERROR: Plugin {{{name}}} do not export [add] method"
      }
    },
    "remove": {
      "desc": "Remove a repository from registry and disk.",
      "argv": {
        "owner": {
          "desc": "the repository'owner."
        },
        "repo": {
          "desc": "the repository'name."
        }
      },
      "log": {
        "err_missing_repo": "remove <{{{owner}}}> <repo> missing repo",
        "info_type_to_search": "Type to Search",
        "warn_confirm_del": "Are you sure to delete {{{repo}}}",
        "del": "{{{repo}}} have been removed."
      }
    },
    "list": {
      "desc": "Display the all repositories in registry.",
      "argv": {
        "key": {
          "desc": "filter by the key."
        }
      },
      "log": {
        "warn_empty_registry": "You did not add any repository yet, try run command line: gpm add <repo> [options]",
        "err_not_found": "Not Found any repository"
      }
    },
    "clean": {
      "desc": "Clear the cache, locate in {{{tempPath}}}."
    },
    "prune": {
      "desc": "Remove the file or dir you don't really need id, like node_modules"
    },
    "find": {
      "desc": "Find repository by a key, You can get all about the repository info.",
      "log": {
        "info_type_to_search": "Type to Search"
      }
    },
    "relink": {
      "desc": "Relink the base directory and gpm registry, like Angular, trigger the $digest in manual."
    },
    "config": {
      "desc": "A series handler of configurations.",
      "argv": {
        "action": {
          "desc": "Config action."
        },
        "key": {
          "desc": "Config key."
        },
        "value": {
          "desc": "Config value."
        },
        "log": {
          "require_key": "The [key] must be required",
          "require_val": "The <value> must be required",
          "info_reset": "Has reset the config to default",
          "info_help": "Flow the command line: {{{cmd}}}"
        }
      },
      "log":{
        "help": "Please follow the command: {{cmd}}"
      }
    },
    "runtime": {
      "desc": "Print the program runtime, useful for submit issue."
    }
  }
}
